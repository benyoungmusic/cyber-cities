(()=>{"use strict";class t{constructor(t){this.params=t,this.x=this.params.x,this.y=this.params.y,this.height=this.params.height,this.width=this.params.width,this.ctx=t.ctx,this.bloomctx=t.bloomctx}drawRect(t,e,s,i){t.strokeStyle="rgb(75, 255, 255)",t.strokeRect(e[0],e[1],s,i)}drawRects(t,e,s,i){this.drawRect(t,e,s,i),t.translate(e[0],e[1]),t.rotate(Math.PI/4),t.translate(-1*e[0],-1*e[1]),this.drawRect(t,e,s,i),t.translate(e[0],e[1]),t.rotate(Math.PI/4),t.translate(-1*e[0],-1*e[1]),this.drawRect(t,e,s,i),t.translate(e[0],e[1]),t.rotate(Math.PI/4),t.translate(-1*e[0],-1*e[1]),this.drawRect(t,e,s,i),t.setTransform(1,0,0,1,0,0)}drawBase(t=[260,200],e=3){this.ctx.strokeStyle="rgb(75, 255, 255)",this.ctx.lineWidth=e,this.drawThreeEights(this.ctx,t),this.bloomctx.lineWidth=4.8,this.bloomctx.strokeStyle="rgb(75, 255, 255)",this.drawThreeEights(this.bloomctx,t)}drawThreeEights(t,e=[260,200],s=[50,30]){this.drawEight(t,e,s),t.translate(e[0],e[1]),t.rotate(Math.PI/3),t.translate(-1*e[0],-1*e[1]),this.drawEight(t,e,s),t.translate(e[0],e[1]),t.rotate(Math.PI/3),t.translate(-1*e[0],-1*e[1]),this.drawEight(t,e,s),t.setTransform(1,0,0,1,0,0)}drawTriangleBase(t=[100,100],e=this.ctx){e.strokeStyle="rgb(75, 255, 255)",e.lineWidth=2,this.drawTriangles(e,t),this.bloomctx.lineWidth=3,this.bloomctx.strokeStyle="rgb(75, 255, 255)",this.drawTriangles(this.bloomctx,t)}drawTriangles(t=this.ctx,e=[100,100]){this.drawTriangle(t,[e[0]-20,e[1]-12]),t.translate(e[0],e[1]),t.rotate(Math.PI/2),t.translate(-1*e[0],-1*e[1]),this.drawTriangle(t,[e[0]-20,e[1]-12]),t.translate(e[0],e[1]),t.rotate(Math.PI/2),t.translate(-1*e[0],-1*e[1]),this.drawTriangle(t,[e[0]-20,e[1]-12]),t.translate(e[0],e[1]),t.rotate(Math.PI/2),t.translate(-1*e[0],-1*e[1]),this.drawTriangle(t,[e[0]-20,e[1]-12]),t.setTransform(1,0,0,1,0,0)}drawUpgradedTriangles(t=this.ctx,e=[100,100]){this.drawTriangle(t,e),t.translate(e[0],e[1]),t.rotate(Math.PI/2),t.translate(-1*e[0],-1*e[1]),this.drawTriangle(t,e),t.translate(e[0],e[1]),t.rotate(Math.PI/2),t.translate(-1*e[0],-1*e[1]),this.drawTriangle(t,e),t.translate(e[0],e[1]),t.rotate(Math.PI/2),t.translate(-1*e[0],-1*e[1]),this.drawTriangle(t,e),t.translate(e[0],e[1]),t.rotate(Math.PI/3),t.translate(-1*e[0],-1*e[1]),this.drawTriangle(t,[e[0]-20,e[1]-12]),t.translate(e[0],e[1]),t.rotate(Math.PI/2),t.translate(-1*e[0],-1*e[1]),this.drawTriangle(t,[e[0]-20,e[1]-12]),t.translate(e[0],e[1]),t.rotate(Math.PI/2),t.translate(-1*e[0],-1*e[1]),this.drawTriangle(t,[e[0]-20,e[1]-12]),t.translate(e[0],e[1]),t.rotate(Math.PI/2),t.translate(-1*e[0],-1*e[1]),this.drawTriangle(t,[e[0]-20,e[1]-12]),t.setTransform(1,0,0,1,0,0)}drawRedRoad(t=[100,100],e=[200,200],s=this.ctx){s.beginPath(),s.lineWidth=5,s.strokeStyle="rgb(255, 0, 0)",s.moveTo(t[0],t[1]),s.lineTo(e[0],e[1]),s.stroke(),s.closePath(),this.bloomctx.beginPath(),this.bloomctx.lineWidth=7,this.bloomctx.strokeStyle="rgb(255, 0, 0)",this.bloomctx.moveTo(t[0],t[1]),this.bloomctx.lineTo(e[0],e[1]),this.bloomctx.stroke(),this.bloomctx.closePath()}drawRedCursor(t=[100,100],e=this.ctx){e.beginPath(),e.lineWidth=5,e.strokeStyle="rgb(255, 0, 0)",e.arc(t[0],t[1],3,0,2*Math.PI),e.stroke(),e.closePath()}drawGreenCursor(t=[100,100],e=this.ctx){e.beginPath(),e.lineWidth=5,e.strokeStyle="rgb(0, 255, 0)",e.arc(t[0],t[1],3,0,2*Math.PI),e.stroke(),e.closePath()}drawGreenRoad(t=[100,100],e=[200,200],s=this.ctx){s.beginPath(),s.lineWidth=6,s.strokeStyle="rgb(0, 255, 0)",s.moveTo(t[0],t[1]),s.lineTo(e[0],e[1]),s.stroke(),s.closePath(),this.bloomctx.beginPath(),this.bloomctx.lineWidth=7,this.bloomctx.strokeStyle="rgb(0, 255, 0)",this.bloomctx.moveTo(t[0],t[1]),this.bloomctx.lineTo(e[0],e[1]),this.bloomctx.stroke(),this.bloomctx.closePath()}drawTriangle(t=this.ctx,e=[400,400]){t.beginPath(),t.moveTo(e[0],e[1]),t.lineTo(e[0]+20,e[1]),t.lineTo(e[0]+9,e[1]+10),t.lineTo(e[0],e[1]),t.stroke()}drawEight(t,e=[260,200],s=[50,30]){let i=e[0],o=e[1],r=s[0],n=s[1];t.beginPath(),t.arc(i-r/(10/3),o,n/2,.5*Math.PI,1.5*Math.PI),t.quadraticCurveTo(i-r/(20/3),o-n/2,i,o),t.quadraticCurveTo(i+r/(20/3),o+n/2,i+r/(10/3),o+n/2),t.arc(i+r/(10/3),o,n/2,.5*Math.PI,1.5*Math.PI,!0),t.quadraticCurveTo(i+r/(20/3),o-n/2,i,o),t.quadraticCurveTo(i-r/(20/3),o+n/2,i-r/(10/3),o+n/2),t.stroke(),t.closePath()}bloom(){this.drawRect(this.bloomctx,6)}}class e{constructor(t,e,s){this.screenSizeX=e[0],this.screenSizeY=e[1],this.x=e[0]/8,this.y=e[1]-2,this.x2=e[0]-this.x,this.y2=e[1]*(5/6),this.x3=this.x*(7/8),this.x4=this.screenSizeX-this.x3,this.ctx=t,this.bloomCtx=s}drawBuildingBar(e,s){this.buildingBarOutline(),this.eightBase=new t({x:150,y:150,height:50,width:50,ctx:e,bloomctx:s}),this.eightBase.drawBase([this.screenSizeX/5,this.screenSizeY*(11/12)]),this.eightBase.drawTriangleBase([2*this.screenSizeX/5,this.screenSizeY*(11/12)],this.ctx),this.eightBase.drawRedRoad([14*this.screenSizeX/20,this.screenSizeY*(11/12)],[16*this.screenSizeX/20,this.screenSizeY*(11/12)],this.ctx),this.eightBase.drawGreenRoad([11*this.screenSizeX/20,this.screenSizeY*(11/12)],[13*this.screenSizeX/20,this.screenSizeY*(11/12)],this.ctx)}buildingBarOutline(){this.bloomCtx.strokeStyle="rgb(100, 120, 0)",this.bloomCtx.lineWidth=9,this.bloomCtx.beginPath(),this.bloomCtx.moveTo(this.x,this.y),this.bloomCtx.lineTo(this.x3,this.y2),this.bloomCtx.lineTo(this.x4,this.y2),this.bloomCtx.lineTo(this.x2,this.y),this.bloomCtx.lineTo(this.x,this.y),this.bloomCtx.stroke(),this.ctx.strokeStyle="rgb(100, 120, 0)",this.ctx.lineWidth=4,this.ctx.beginPath(),this.ctx.moveTo(this.x,this.y),this.ctx.lineTo(this.x3,this.y2),this.ctx.lineTo(this.x4,this.y2),this.ctx.lineTo(this.x2,this.y),this.ctx.fillStyle="rgb(45, 50, 65)",this.ctx.lineTo(this.x,this.y),this.ctx.fill(),this.ctx.stroke()}}class s{constructor(t,e,s,i,o,r){t.width=1e3,this.screenWidth=1e3,t.height=600,this.screenHeight=600,e.width=1e3,e.height=600,i.width=1e3,i.height=600,o.width=1e3,o.height=600,r.width=1e3,r.height=600;const n=t.getContext("2d");this.ctx=n,this.buildingBarCtx=i.getContext("2d"),this.buildingBloom=o.getContext("2d"),this.buildingIcons=r.getContext("2d"),this.offsetX=0,this.offsetY=0,this.canvas=t,this.bloom=e,this.drawingRoad=!1,this.roadCursor=[],this.navStructures={base:{center:[this.screenWidth/5,this.screenHeight*(11/12)],radius:this.screenWidth/50},building:{start:[2*this.screenWidth/5,this.screenHeight*(11/12)]},redRoad:{start:[14*this.screenWidth/20,this.screenHeight*(11/12)],end:[16*this.screenWidth/20,this.screenHeight*(11/12)]},greenRoad:{start:[11*this.screenWidth/20,11*this.screenHeight/12],end:[13*this.screenWidth/20,11*this.screenHeight/12]}},this.structures={base:[],building:[],redRoad:[],greenRoad:[]},this.dragCanvas=s,this.dragCtx=s.getContext("2d"),this.dimensions={width:t.width,height:t.height},this.bloomctx=e.getContext("2d"),this.start(),this.baseOnMouseMove=this.baseOnMouseMove.bind(this),this.baseOnMouseUp=this.baseOnMouseUp.bind(this),this.buildingOnMouseMove=this.buildingOnMouseMove.bind(this),this.buildingOnMouseUp=this.buildingOnMouseUp.bind(this),this.redRoadOnMouseMove1=this.redRoadOnMouseMove1.bind(this),this.redRoadOnMouseDown1=this.redRoadOnMouseDown1.bind(this),this.redRoadOnMouseMove2=this.redRoadOnMouseMove2.bind(this),this.redRoadOnMouseDown2=this.redRoadOnMouseDown2.bind(this),this.greenRoadOnMouseMove1=this.greenRoadOnMouseMove1.bind(this),this.greenRoadOnMouseDown1=this.greenRoadOnMouseDown1.bind(this),this.greenRoadOnMouseMove2=this.greenRoadOnMouseMove2.bind(this),this.greenRoadOnMouseDown2=this.greenRoadOnMouseDown2.bind(this)}start(){this.drawBackground(this.ctx),this.buildingBar=new e(this.buildingBarCtx,[this.screenWidth,this.screenHeight],this.bloomctx),this.buildingBar.drawBuildingBar(this.buildingIcons,this.buildingBloom),this.firstStructure=new t({x:150,y:150,height:50,width:50,ctx:this.ctx,bloomctx:this.bloomctx}),this.newMouseStuff()}drawBackground(t){t.strokeStyle="black",t.fillRect(0,0,canvas.width,canvas.height)}animate(){}circleCollision(t,e,s){if(Math.sqrt((t[0]-e[0])*(t[0]-e[0])+(t[1]-e[1])*(t[1]-e[1]))<s)return!0}newMouseStuff(){document.body.addEventListener("mousedown",(t=>{this.circleCollision(this.navStructures.base.center,[t.clientX,t.clientY],this.navStructures.base.radius)?(this.offsetX=t.clientX-this.navStructures.base.center[0],this.offsetY=t.clientY-this.navStructures.base.center[1],console.log("bases",this.structures.base),document.body.addEventListener("mousemove",this.baseOnMouseMove),document.body.addEventListener("mouseup",this.baseOnMouseUp),this.structures.base.push(this.navStructures.base.center)):t.clientX>this.navStructures.building.start[0]-20&&t.clientX<this.navStructures.building.start[0]+20&&t.clientY>this.navStructures.building.start[1]-20&&t.clientY<this.navStructures.building.start[1]+20?(console.log("building"),this.offsetX=t.clientX-this.navStructures.building.start[0],this.offsetY=t.clientY-this.navStructures.building.start[1],document.body.addEventListener("mousemove",this.buildingOnMouseMove),document.body.addEventListener("mouseup",this.buildingOnMouseUp),console.log("buildings",this.structures.building),this.structures.building.push(this.navStructures.building.start)):t.clientX>this.navStructures.redRoad.start[0]-10&&t.clientX<this.navStructures.redRoad.end[0]+10&&t.clientY>this.navStructures.redRoad.start[1]-10&&t.clientY<this.navStructures.redRoad.end[1]+10?(console.log("red road"),this.drawingRoad="red",this.structures.roadCursor=[t.clientX,t.clientY],document.body.addEventListener("mousemove",this.redRoadOnMouseMove1),document.body.addEventListener("mousedown",this.redRoadOnMouseDown1)):t.clientX>this.navStructures.greenRoad.start[0]-10&&t.clientX<this.navStructures.greenRoad.end[0]+10&&t.clientY>this.navStructures.greenRoad.start[1]-10&&t.clientY<this.navStructures.greenRoad.end[1]+10&&(console.log("green road"),this.drawingRoad="green",this.structures.roadCursor=[t.clientX,t.clientY],document.body.addEventListener("mousemove",this.greenRoadOnMouseMove1),document.body.addEventListener("mousedown",this.greenRoadOnMouseDown1))}))}greenRoadOnMouseMove1(t){this.roadCursor=[t.clientX,t.clientY],this.draw()}greenRoadOnMouseDown1(t){console.log("green road mouse down1",this.structures.greenRoad),this.structures.greenRoad.push([[t.clientX,t.clientY],[t.clientX,t.clientY]]),document.body.removeEventListener("mousemove",this.greenRoadOnMouseMove1),document.body.removeEventListener("mousedown",this.greenRoadOnMouseDown1),document.body.addEventListener("mousemove",this.greenRoadOnMouseMove2),document.body.addEventListener("mousedown",this.greenRoadOnMouseDown2)}greenRoadOnMouseMove2(t){console.log(this.structures.greenRoad),this.roadCursor=[t.clientX,t.clientY],this.structures.greenRoad[this.structures.greenRoad.length-1][1]=[t.clientX,t.clientY],this.draw()}greenRoadOnMouseDown2(t){console.log("green road mouse down2"),this.drawingRoad=!1,document.body.removeEventListener("mousemove",this.greenRoadOnMouseMove2),document.body.removeEventListener("mousedown",this.greenRoadOnMouseDown2),this.draw()}baseOnMouseMove(t){this.structures.base[this.structures.base.length-1]=[t.clientX-this.offsetX,t.clientY-this.offsetY],this.draw()}buildingOnMouseMove(t){this.structures.building[this.structures.building.length-1]=[t.clientX-this.offsetX,t.clientY-this.offsetY],this.draw()}redRoadOnMouseMove1(t){this.roadCursor=[t.clientX,t.clientY],this.draw()}redRoadOnMouseDown1(t){console.log("red road mouse down1",this.structures.redRoad),this.structures.redRoad.push([[t.clientX,t.clientY],[t.clientX,t.clientY]]),document.body.removeEventListener("mousemove",this.redRoadOnMouseMove1),document.body.removeEventListener("mousedown",this.redRoadOnMouseDown1),document.body.addEventListener("mousemove",this.redRoadOnMouseMove2),document.body.addEventListener("mousedown",this.redRoadOnMouseDown2)}redRoadOnMouseMove2(t){console.log(this.structures.redRoad),this.roadCursor=[t.clientX,t.clientY],this.structures.redRoad[this.structures.redRoad.length-1][1]=[t.clientX,t.clientY],this.draw()}redRoadOnMouseDown2(t){console.log("red road mouse down2"),this.drawingRoad=!1,document.body.removeEventListener("mousemove",this.redRoadOnMouseMove2),document.body.removeEventListener("mousedown",this.redRoadOnMouseDown2),this.draw()}baseOnMouseUp(t){console.log("basemouseup"),document.body.removeEventListener("mousemove",this.baseOnMouseMove),document.body.removeEventListener("mouseup",this.baseOnMouseUp)}buildingOnMouseUp(t){console.log("buildingmouseup"),document.body.removeEventListener("mousemove",this.buildingOnMouseMove),document.body.removeEventListener("mouseup",this.buildingOnMouseUp)}draw(){this.dragCtx.clearRect(0,0,this.canvas.width,this.canvas.height),this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.bloomctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.drawBackground(this.ctx),this.firstStructure.drawBase(this.navStructures.base.center),this.firstStructure.drawTriangleBase(this.navStructures.building.start),this.structures.base.forEach((t=>this.firstStructure.drawBase(t))),this.structures.building.forEach((t=>this.firstStructure.drawTriangleBase(t))),this.drawingRoad&&("red"===this.drawingRoad?this.firstStructure.drawRedCursor(this.roadCursor):"green"===this.drawingRoad&&this.firstStructure.drawGreenCursor(this.roadCursor)),this.structures.redRoad.forEach((t=>this.firstStructure.drawRedRoad(t[0],t[1]))),this.structures.greenRoad.forEach((t=>this.firstStructure.drawGreenRoad(t[0],t[1])))}}console.log("webpack is working"),document.addEventListener("DOMContentLoaded",(function(){const t=document.getElementById("canvas"),e=document.getElementById("bloom"),i=document.getElementById("drag-canvas"),o=document.getElementById("building-bar"),r=document.getElementById("building-bar-bloom"),n=document.getElementById("building-icons");new s(t,e,i,o,r,n)}))})();